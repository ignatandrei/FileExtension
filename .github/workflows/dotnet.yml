name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    #runs-on: ubuntu-latest
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: |
          cd src 
          dotnet restore
          dotnet tool restore
    - name: Build
      run: |
          cd src 
          dotnet build
          dotnet build 
          cd RecognizerPlugin
          dotnet pack --output pack
    - name: Test
      run: |
          cd src 
          dotnet test

    - name: 'Upload artifact test'
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: FileExtensions_RunTest_${{github.run_number}}
        path: src/TestFileExtensions/bin/Debug/net5.0/Reports
        retention-days: 1

    - name: Pack
      run: |
          cd src 
          cd RecognizerPlugin
          dotnet pack --output pack

    - name: 'Upload artifact pack'
      uses: actions/upload-artifact@v2
      with:
        name: FileExtensions_Nuget_${{github.run_number}}
        path: src/RecognizerPlugin/pack/
        retention-days: 1
          
    - name: Codecov generator
      run: |
        cd src
        dotnet coverlet TestFileExtensions\bin\Debug\net5.0\TestFileExtensions.dll --target "dotnet" --targetargs "test RecognizeFileExtension.sln --no-build"  --format opencover --exclude "[SampleWeb*]*"  --exclude "[xunit*]*" --verbosity detailed
        #dotnet coverlet TestFileExtensions\bin\Debug\net5.0\TestFileExtensions.dll --target "dotnet" --targetargs "test RecognizeFileExtension.sln"  --format opencover  --verbosity detailed
        dotnet reportgenerator "-reports:coverage.opencover.xml" "-targetdir:coveragereport" "-reporttypes:HTMLInline;HTMLSummary;Badges"


    - name: Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        files: src/coverage.opencover.xml 
        fail_ci_if_error: true # optional (default = false)
        #verbose: true # optional (default = false)

    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        cd src/TestFileExtensions
        dotnet dotnet-sonarscanner begin /k:"ignatandrei_FileExtension" /o:"ignatandrei-github" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"        
        dotnet build
        dotnet dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: helper - see Outdated, thanks , licences and depends
      run: |
        cd src/TestFileExtensions/        
        dotnet dotnet-outdated
        dotnet dotnet-thx 
        dotnet dotnet-project-licenses -i .\RecordVisitors.sln 
        # dotnet dotnet-versionit  --skip-dirty --skip-commit  -r 2021.5.31.1755 
        # dotnet dotnet-depends
    