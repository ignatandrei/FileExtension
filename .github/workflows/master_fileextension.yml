name: AutomaticDeploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  buildAngular:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.6.x]

    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

    - name: Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install and npm run build
      run: |
        cd src
        cd FileExtensionAng
        npm ci
        npm run build

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: FileExtensionAng
        path: 'src/FileExtensionAng/dist/'
        retention-days: 1


  build:
    runs-on: windows-latest
    needs: buildAngular

    steps:
      - uses: actions/checkout@v2

      - name: Download angular static site
        uses: actions/download-artifact@v2
        with:
          name: FileExtensionAng


      - name: Verify downloads
        run: |
          dir 
          dir FileExtensionAng
          dir src/RecognizeFileExtWebAPI/wwwroot
          del src/RecognizeFileExtWebAPI/wwwroot/index.html
          copy FileExtensionAng/*.* src/RecognizeFileExtWebAPI/wwwroot/

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: |
          cd src
          dotnet build --configuration Release
          dotnet build --configuration Release

      - name: dotnet publish
        run: |
          cd src
          cd RecognizeFileExtWebAPI
          dotnet publish -c Release -o ${{env.DOTNET_ROOT}}\myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}\myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'FileExtension'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DA70BC6FEB2440688FB2B836327E0D2C }}
          package: .
